[debug] 
[debug] Initial source changes: 
[debug] 	removed:Set()
[debug] 	added: Set()
[debug] 	modified: Set(/Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala, /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala, /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialRing.scala)
[debug] Removed products: Set(/Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$polyFromCoeffsLE$1$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolyRings.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Term.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$zipSum$1$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$clearZeroesPoly$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolyRings$$anon$1$$anon$3.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$coeffs$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$allTerms$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$derivative$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/TermRing.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolyRings$class.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolyRings$$anon$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$class.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$BigEndianPolyOrdering$.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$apply$2.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$apply$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$times$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$clearZeroesPoly$2.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$integral$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolyRings$$anon$2.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$monic$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$clearZeroesPoly$2$$anonfun$apply$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$allTerms$2.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$times$1$$anonfun$apply$2.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/TermRing$class.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$derivative$2.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Term$.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$uprime$lzycompute$1$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$quotMod$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$degree$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$degree$2.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/Poly$$anonfun$toString$1.class, /Users/James/Desktop/Spolynomials/target/scala-2.10/classes/spolynomials/PolynomialRing$$anonfun$negate$1.class)
[debug] Modified external sources: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated sources: Set(/Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala, /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala, /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialRing.scala)
[debug] 
[debug] Sources indirectly invalidated by:
[debug] 	product: Set(/Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialRing.scala, /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala, /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala)
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] Initially invalidated: Set(/Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala, /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala, /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialRing.scala)
[info] Compiling 3 Scala sources to /Users/James/Desktop/Spolynomials/target/scala-2.10/classes...
<<<<<<< HEAD
<<<<<<< HEAD
[debug] Running cached compiler 4c733170, interfacing (CompilerInterface) with Scala compiler version 2.10.2
=======
[debug] Running cached compiler 69fcccda, interfacing (CompilerInterface) with Scala compiler version 2.10.2
>>>>>>> parent of a085e51... Issues with implicit resolution from Interval-like approach
=======
[debug] Running cached compiler 69fcccda, interfacing (CompilerInterface) with Scala compiler version 2.10.2
>>>>>>> parent of a085e51... Issues with implicit resolution from Interval-like approach
[debug] Calling Scala compiler with arguments  (CompilerInterface):
[debug] 	-d
[debug] 	/Users/James/Desktop/Spolynomials/target/scala-2.10/classes
[debug] 	-bootclasspath
[debug] 	/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/JObjC.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/classes:/Users/James/.sbt/boot/scala-2.10.2/lib/scala-library.jar
[debug] 	-classpath
[debug] 	/Users/James/Desktop/Spolynomials/target/scala-2.10/classes:/Users/James/.ivy2/cache/org.spire-math/spire_2.10/jars/spire_2.10-0.5.0.jar:/Users/James/.ivy2/cache/org.spire-math/macros_2.10/jars/macros_2.10-0.5.0.jar:/Users/James/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.10.2.jar
<<<<<<< HEAD
<<<<<<< HEAD
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala:63: ambiguous implicit values:
[error]  both value cord in class Poly of type spire.algebra.Order[C]
[error]  and method eord of type => spire.algebra.Order[C]
[error]  match expected type spire.algebra.Order[C]
[error] 		implicit def eord: Order[C] = Order[C]
[error] 		                                   ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala:80: could not find implicit value for parameter o: spire.algebra.Order[C]
[error] 		val cord = Order[C]
[error] 		                ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala:87: could not find implicit value for parameter o: spire.algebra.Order[C]
[error] 		val cord = Order[C]
[error] 		                ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala:88: could not find implicit value for parameter o: spire.algebra.Order[E]
[error] 		val eord = Order[E]
[error] 		                ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala:92: could not find implicit value for parameter o: spire.algebra.Order[C]
[error] 			val cord = Order[C]
[error] 			                ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala:104: could not find implicit value for parameter cord: spire.algebra.Order[C]
[error]   	new Poly(terms)
[error]   	^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala:60: could not find implicit value for parameter eord: spire.algebra.Order[E]
[error] 		Term(cring.negate(t.coeff), t.exp)
[error] 		    ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala:63: could not find implicit value for parameter eord: spire.algebra.Order[E]
[error] 		Term(cring.zero, ering.zero)
[error] 		    ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala:66: could not find implicit value for parameter eord: spire.algebra.Order[E]
[error] 		Term(cring.one, ering.zero)
[error] 		    ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala:69: could not find implicit value for parameter eord: spire.algebra.Order[E]
[error] 		Term(cring.plus(x.coeff, y.coeff), y.exp)
[error] 		    ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/PolynomialTerm.scala:72: could not find implicit value for parameter eord: spire.algebra.Order[E]
[error] 		Term(cring.times(x.coeff, y.coeff), ering.plus(x.exp, y.exp))
[error] 		    ^
[error] 11 errors found
=======
=======
>>>>>>> parent of a085e51... Issues with implicit resolution from Interval-like approach
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala:89: not found: type C
[error] 	implicit object tR extends TermRing[C, E] {}
[error] 	                                    ^
[error] /Users/James/Desktop/Spolynomials/src/main/scala/spolynomials/Polynomial.scala:89: not found: type E
[error] 	implicit object tR extends TermRing[C, E] {}
[error] 	                                       ^
[error] two errors found
<<<<<<< HEAD
>>>>>>> parent of a085e51... Issues with implicit resolution from Interval-like approach
=======
>>>>>>> parent of a085e51... Issues with implicit resolution from Interval-like approach
[debug] Compilation failed (CompilerInterface)
[error] (compile:compile) Compilation failed
